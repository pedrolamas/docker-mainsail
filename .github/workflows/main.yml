name: Release

on:
  push:
  schedule:
    - cron: "*/20 * * * *"
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: master
            label: latest
          - branch: develop
            label: latest-dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone Mainsail ${{ matrix.branch }} branch
        run: |
          git config --global user.name 'username'
          git config --global user.email 'username@users.noreply.github.com'

          git clone -b ${{ matrix.branch }} --depth 1 https://github.com/mainsail-crew/mainsail

      - name: Build Mainsail code
        id: build
        run: |
          npm ci --ignore-scripts --no-optional
          npm run build

          MAILSAIL_SHA=$(git rev-parse HEAD)

          echo ::set-output name=mailsail_sha::${MAILSAIL_SHA}
        working-directory: ./mainsail

      - name: Prepare GitHub metadata
        id: github_meta
        run: |
          REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}

          echo ::set-output name=repository_name::${REPOSITORY_NAME}

      - name: Prepare Docker image metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.github_meta.outputs.repository_name }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=sha-${{ steps.build.outputs.mailsail_sha }}
            type=raw,value=${{ matrix.branch }}
            type=raw,value=${{ matrix.label }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
