name: Release

on:
  schedule:
    - cron: "*/20 * * * *"
  workflow_dispatch:
    inputs:
      forceBuild:
        description: "Force image build"
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      attestations: write
      packages: write
    strategy:
      matrix:
        include:
          - branch: master
            label: latest
          - branch: develop
            label: latest-dev
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clone Mainsail ${{ matrix.branch }} branch
        id: repo
        run: |
          git config --global user.name 'username'
          git config --global user.email 'username@users.noreply.github.com'

          git clone -b ${{ matrix.branch }} --depth 1 https://github.com/mainsail-crew/mainsail

          MAINSAIL_SHA=$(git -C mainsail rev-parse HEAD)

          echo "mainsail_sha=${MAINSAIL_SHA}" >> $GITHUB_OUTPUT

      - name: Check if Docker image already exists
        id: check
        run: |
          BUILD_IMAGE=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.forceBuild == 'true' }}

          docker manifest inspect ghcr.io/${{ github.repository }}:sha-${{ steps.repo.outputs.mainsail_sha }} > /dev/null || BUILD_IMAGE=true

          echo "build_image=${BUILD_IMAGE}" >> $GITHUB_OUTPUT

      - name: Setup Node
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: mainsail/package-lock.json

      - name: Install Mainsail dependencies
        if: ${{ steps.check.outputs.build_image == 'true' }}
        run: |
          npm ci
        working-directory: mainsail

      - name: Build Mainsail
        if: ${{ steps.check.outputs.build_image == 'true' }}
        run: |
          npm run build
        working-directory: mainsail

      - name: Prepare GitHub metadata
        if: ${{ steps.check.outputs.build_image == 'true' }}
        id: github_meta
        run: |
          REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}

          echo "repository_name=${REPOSITORY_NAME}" >> $GITHUB_OUTPUT

      - name: Prepare Docker image metadata
        if: ${{ steps.check.outputs.build_image == 'true' }}
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.github_meta.outputs.repository_name }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=sha-${{ steps.repo.outputs.mainsail_sha }}
            type=raw,value=${{ matrix.branch }}
            type=raw,value=${{ matrix.label }}

      - name: Set up QEMU
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: ${{ steps.check.outputs.build_image == 'true' }}
        id: docker_push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          sbom: true
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Attest Docker Hub image
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.github_meta.outputs.repository_name }}
          subject-digest: ${{ steps.docker_push.outputs.digest }}
          push-to-registry: true

      - name: Attest Container Registry image
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.docker_push.outputs.digest }}
          push-to-registry: true
